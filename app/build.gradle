apply plugin: 'com.android.application'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    applicationId "com.happy.photoviewer"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  lintOptions {
    // set to true to turn off analysis progress reporting by lint
    quiet true
    // if true, stop the gradle build if errors are found
    abortOnError false
    // if true, only report errors
    ignoreWarnings true
    // if true, emit full/absolute paths to files with errors (true by default)
    //absolutePaths true
    // if true, check all issues, including those that are off by default
    checkAllWarnings true
    // if true, treat all warnings as errors
    warningsAsErrors true
    // turn off checking the given issue id's
    disable 'TypographyFractions', 'TypographyQuotes'
    // turn on the given issue id's
    enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
    // check *only* the given issue id's
    check 'NewApi', 'InlinedApi'
    // if true, don't include source code lines in the error output
    noLines true
    // if true, show all locations for an error, do not truncate lists, etc.
    showAll true
    // Fallback lint configuration (default severities, etc.)
    lintConfig file("default-lint.xml")
    // if true, generate a text report of issues (false by default)
    textReport true
    // location to write the output; can be a file or 'stdout'
    textOutput 'stdout'
    // if true, generate an XML report for use by for example Jenkins
    xmlReport true
    // file to write report to (if not specified, defaults to lint-results.xml)
    xmlOutput file("lint-report.xml")
    // if true, generate an HTML report (with issue explanations, sourcecode, etc)
    htmlReport false
    // optional path to report (default will be lint-results.html in the builddir)
    htmlOutput file("lint-report.html")
  }

  buildTypes {

    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}
dependencies {

  //App's dependencies, include test
  compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
  compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"

  compile 'com.github.bumptech.glide:glide:3.7.0'
  compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"

  provided 'org.glassfish:javax.annotation:10.0-b28'
  provided 'org.projectlombok:lombok:1.16.14'

  compile 'com.google.code.gson:gson:2.8.0'

  compile 'com.jakewharton:butterknife:8.5.1'
  annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

  compile 'com.squareup.retrofit2:retrofit:2.2.0'
  compile 'com.squareup.retrofit2:converter-gson:2.2.0'

  compile "com.google.guava:guava:$rootProject.guavaVersion"

  // Dependencies for local unit tests
  testCompile 'junit:junit:4.12'

  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
}
repositories {}